{"ast":null,"code":"var _jsxFileName = \"/home/sudhanshu/Desktop/AltCampus/react/react-todo-app/src/js/App.js\";\nimport React from \"react\"; // import { render } from \"@testing-library/react\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = value => {\n      this.setState({\n        input: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        todos: [...this.state.todos, {\n          id: Date.now(),\n          text: this.state.input,\n          isDone: false\n        }],\n        input: \"\",\n        filterTodos: [...this.state.todos]\n      });\n    };\n\n    this.handleRemove = id => {\n      let Filter = this.state.todos.filter(todo => todo.id !== id);\n      this.setState({\n        todos: Filter\n      });\n    };\n\n    this.handleToggle = id => {\n      let Mapped = this.state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.isDone = !todo.isDone;\n        }\n\n        return todo;\n      });\n      this.setState({\n        todos: Mapped\n      }); // this.setState({todos.completed : this.state.todos.filter(todo => todo.isDone)});\n    };\n\n    this.handleAll = todos => {\n      this.setState({\n        filterTodos: this.state.todos\n      });\n    };\n\n    this.handleCompleted = state => {\n      let completed = this.state.todos.filter(todo => todo.isDone);\n      this.setState({\n        filterTodos: completed\n      });\n    };\n\n    this.handleActive = state => {\n      let active = this.state.todos.filter(todo => !todo.isDone);\n      this.setState({\n        filterTodos: active\n      });\n    };\n\n    this.state = {\n      todos: [],\n      filterTodos: [],\n      input: \"\",\n      active: [],\n      completed: []\n    };\n  }\n\n  render() {\n    // console.log(this.state.input,\"rendering\");\n    console.log(this.state, \"state\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, \"todos\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.input,\n      onChange: ({\n        target: {\n          value\n        }\n      }) => this.handleChange(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, this.state.filterTodos.map((todo, i) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: todo.isDone,\n        onChange: () => this.handleToggle(todo.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 19\n        }\n      }, todo.text), /*#__PURE__*/React.createElement(\"span\", {\n        onClick: () => this.handleRemove(todo.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 19\n        }\n      }, \"X\"));\n    }))), /*#__PURE__*/React.createElement(\"footer\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, \"0 item left\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"all\",\n      onClick: () => this.handleAll(this.state.todos),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"completed\",\n      onClick: () => this.handleCompleted(this.state.todos),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, \"Completed\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"active\",\n      onClick: () => this.handleActive(this.state.todos),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, \"Active\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"clear\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      class: \"anchor\",\n      href: \"##\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, \"Clear Completed\"))));\n  }\n\n}","map":{"version":3,"sources":["/home/sudhanshu/Desktop/AltCampus/react/react-todo-app/src/js/App.js"],"names":["React","App","Component","constructor","props","handleChange","value","setState","input","handleSubmit","e","preventDefault","todos","state","id","Date","now","text","isDone","filterTodos","handleRemove","Filter","filter","todo","handleToggle","Mapped","map","handleAll","handleCompleted","completed","handleActive","active","render","console","log","target","i"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import { render } from \"@testing-library/react\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [],\n      filterTodos:[],\n      input: \"\",\n      active: [],\n      completed : []\n    };\n\n  }\n\n  \n  handleChange = (value) => {\n    this.setState({ input: value });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.setState({\n      todos: [\n        ...this.state.todos,\n        { id: Date.now(), text: this.state.input, isDone: false },\n      ],\n      input: \"\",\n      filterTodos:[...this.state.todos]\n      \n    });\n  };\n  handleRemove = (id) => {\n    let Filter = this.state.todos.filter((todo) => todo.id !== id);\n    this.setState({ todos: Filter });\n  };\n  handleToggle = (id) => {\n    let Mapped = this.state.todos.map((todo) => {\n      if (todo.id === id) {\n        todo.isDone = !todo.isDone;\n      }\n      return todo;\n    });\n    this.setState({ todos: Mapped });\n    // this.setState({todos.completed : this.state.todos.filter(todo => todo.isDone)});\n  };\n\n  handleAll = (todos) => {\n       this.setState({filterTodos:this.state.todos});\n  }\n  handleCompleted = (state) => {\n  \n    let completed = this.state.todos.filter(todo => todo.isDone);\n    this.setState( {filterTodos : completed});\n   \n  }\n  handleActive = (state) => {\n    let active = this.state.todos.filter(todo => !todo.isDone);\n    this.setState( {filterTodos: active});\n  }\n  render() {\n    // console.log(this.state.input,\"rendering\");\n    console.log(this.state,\"state\")\n\n    return (\n      <div>\n        <h2>todos</h2>\n        <div>\n          <form onSubmit={this.handleSubmit}>\n            <input\n              value={this.state.input}\n              onChange={({ target: { value } }) => this.handleChange(value)}\n            />\n          </form>\n          <ul>\n            {this.state.filterTodos.map((todo, i) => {\n              return (\n                <li key={i}>\n                  <input\n                    type=\"checkbox\"\n                    checked={todo.isDone}\n                    onChange={() => this.handleToggle(todo.id)}\n                  />\n                  <p>{todo.text}</p>\n                  <span onClick={() => this.handleRemove(todo.id)}>X</span>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n        <footer>\n          <span class=\"item\">0 item left</span>\n          <button class=\"all\" onClick={() => this.handleAll(this.state.todos)}>All</button>\n          <button class=\"completed\" onClick={() => this.handleCompleted(this.state.todos)}>Completed</button>\n          <button class=\"active\" onClick={() => this.handleActive(this.state.todos)}>Active</button>\n          <button class=\"clear\">\n            <a class=\"anchor\" href=\"##\">\n              Clear Completed\n            </a>\n          </button>\n        </footer>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}