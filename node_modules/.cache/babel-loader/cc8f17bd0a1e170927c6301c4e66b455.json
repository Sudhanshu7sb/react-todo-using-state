{"ast":null,"code":"var _jsxFileName = \"/home/sudhanshu/Desktop/AltCampus/react/react-todo-app/src/js/App.js\";\nimport React from \"react\"; // import { render } from \"@testing-library/react\";\n\nlet filterTodos = [];\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.filterTodo = (tab, todos) => {\n      switch (tab) {\n        case 'ACTIVE':\n          return this.state.todos.filter(todo => !todo.isDone);\n      }\n    };\n\n    this.handleChange = value => {\n      this.setState({\n        input: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        todos: [...this.state.todos, {\n          id: Date.now(),\n          text: this.state.input,\n          isDone: false\n        }],\n        input: \"\"\n      });\n    };\n\n    this.handleRemove = id => {\n      let Filter = this.state.todos.filter(todo => todo.id !== id);\n      this.setState({\n        todos: Filter\n      });\n    };\n\n    this.handleToggle = id => {\n      let Mapped = this.state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.isDone = !todo.isDone;\n        }\n\n        return todo;\n      });\n      this.setState({\n        todos: Mapped\n      }); // this.setState({todos.completed : this.state.todos.filter(todo => todo.isDone)});\n    };\n\n    this.handleAll = str => {\n      this.setState({\n        activeTab: str\n      });\n    };\n\n    this.state = {\n      todos: [],\n      input: \"\",\n      activeTab: \"ALL\"\n    };\n  }\n\n  render() {\n    // console.log(this.state.input,\"rendering\");\n    console.log(this.state.filterTodos, \"state\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \"todos\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.input,\n      onChange: ({\n        target: {\n          value\n        }\n      }) => this.handleChange(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, this.state.filterTodos.length ? this.filterTodos.map((todo, i) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: todo.isDone,\n        onChange: () => this.handleToggle(todo.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 19\n        }\n      }, todo.text), /*#__PURE__*/React.createElement(\"span\", {\n        onClick: () => this.handleRemove(todo.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 19\n        }\n      }, \"X\"));\n    }) : this.state.todos.map((todo, i) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: todo.isDone,\n        onChange: () => this.handleToggle(todo.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 19\n        }\n      }, todo.text), /*#__PURE__*/React.createElement(\"span\", {\n        onClick: () => this.handleRemove(todo.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 19\n        }\n      }, \"X\"));\n    }))), /*#__PURE__*/React.createElement(\"footer\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, \"0 item left\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"all\",\n      onClick: () => this.handleAll(this.state.todos),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"completed\",\n      onClick: () => this.handleCompleted(this.state.todos),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, \"Completed\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"active\",\n      onClick: () => this.handleActive(this.state.todos),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, \"Active\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"clear\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      class: \"anchor\",\n      href: \"##\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, \"Clear Completed\"))));\n  }\n\n}","map":{"version":3,"sources":["/home/sudhanshu/Desktop/AltCampus/react/react-todo-app/src/js/App.js"],"names":["React","filterTodos","App","Component","constructor","props","filterTodo","tab","todos","state","filter","todo","isDone","handleChange","value","setState","input","handleSubmit","e","preventDefault","id","Date","now","text","handleRemove","Filter","handleToggle","Mapped","map","handleAll","str","activeTab","render","console","log","target","length","i","handleCompleted","handleActive"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import { render } from \"@testing-library/react\";\nlet filterTodos=[]\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [],\n      \n      input: \"\",\n      activeTab:\"ALL\"\n    };\n\n  }\n\n  filterTodo=(tab,todos)=>{\n    switch(tab){\n      case 'ACTIVE':\n        return this.state.todos.filter(todo=>!todo.isDone);\n    }\n  }\n  handleChange = (value) => {\n    this.setState({ input: value });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.setState({\n      todos: [\n        ...this.state.todos,\n        { id: Date.now(), text: this.state.input, isDone: false },\n      ],\n      input: \"\",\n      \n    });\n  };\n\n  handleRemove = (id) => {\n    let Filter = this.state.todos.filter((todo) => todo.id !== id);\n    this.setState({ todos: Filter });\n  };\n  handleToggle = (id) => {\n    let Mapped = this.state.todos.map((todo) => {\n      if (todo.id === id) {\n        todo.isDone = !todo.isDone;\n      }\n      return todo;\n    });\n    this.setState({ todos: Mapped });\n    // this.setState({todos.completed : this.state.todos.filter(todo => todo.isDone)});\n  };\n\n  handleAll = (str) => {\n       this.setState({activeTab:str});\n  }\n  render() {\n    // console.log(this.state.input,\"rendering\");\n    console.log(this.state.filterTodos,\"state\")\n\n    return (\n      <div>\n        <h2>todos</h2>\n        <div>\n          <form onSubmit={this.handleSubmit}>\n            <input\n              value={this.state.input}\n              onChange={({ target: { value } }) => this.handleChange(value)}\n            />\n          </form>\n          <ul>\n            {this.state.filterTodos.length? this.filterTodos.map((todo, i) => {\n              return (\n                <li key={i}>\n                  <input\n                    type=\"checkbox\"\n                    checked={todo.isDone}\n                    onChange={() => this.handleToggle(todo.id)}\n                  />\n                  <p>{todo.text}</p>\n                  <span onClick={() => this.handleRemove(todo.id)}>X</span>\n                </li>\n              );\n            }):this.state.todos.map((todo, i) => {\n              return (\n                <li key={i}>\n                  <input\n                    type=\"checkbox\"\n                    checked={todo.isDone}\n                    onChange={() => this.handleToggle(todo.id)}\n                  />\n                  <p>{todo.text}</p>\n                  <span onClick={() => this.handleRemove(todo.id)}>X</span>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n        <footer>\n          <span class=\"item\">0 item left</span>\n          <button class=\"all\" onClick={() => this.handleAll(this.state.todos)}>All</button>\n          <button class=\"completed\" onClick={() => this.handleCompleted(this.state.todos)}>Completed</button>\n          <button class=\"active\" onClick={() => this.handleActive(this.state.todos)}>Active</button>\n          <button class=\"clear\">\n            <a class=\"anchor\" href=\"##\">\n              Clear Completed\n            </a>\n          </button>\n        </footer>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}